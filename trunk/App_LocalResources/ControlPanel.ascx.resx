<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ForumDescription.Help" xml:space="preserve">
    <value>Enter a description for this forum.</value>
  </data>
  <data name="ForumName.Help" xml:space="preserve">
    <value>Name of the forum.</value>
  </data>
  <data name="ParentForum.Help" xml:space="preserve">
    <value>Select a parent forum.</value>
  </data>
  <data name="[RESX:ActiveMembers].Text" xml:space="preserve">
    <value>Active Members</value>
  </data>
  <data name="[RESX:Active].Text" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="[RESX:AddFilter].Text" xml:space="preserve">
    <value>Add Filter</value>
  </data>
  <data name="[RESX:AddForum].Text" xml:space="preserve">
    <value>Add Forum</value>
  </data>
  <data name="[RESX:AddRank].Text" xml:space="preserve">
    <value>Add Rank</value>
  </data>
  <data name="[RESX:AllowTopics].Text" xml:space="preserve">
    <value>Allow Topics</value>
  </data>
  <data name="[RESX:Author].Text" xml:space="preserve">
    <value>Author</value>
  </data>
  <data name="[RESX:Button:Cancel].Text" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="[RESX:Button:Save].Text" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="[RESX:Dashboard].Text" xml:space="preserve">
    <value>Dashboard</value>
  </data>
  <data name="[RESX:Date].Text" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="[RESX:Details].Text" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="[RESX:EmailAddress].Text" xml:space="preserve">
    <value>Email Address</value>
  </data>
  <data name="[RESX:Features].Text" xml:space="preserve">
    <value>Features</value>
  </data>
  <data name="[RESX:ForumDescription].Text" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="[RESX:ForumName].Text" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="[RESX:Hidden].Text" xml:space="preserve">
    <value>Hidden</value>
  </data>
  <data name="[RESX:Name].Text" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="[RESX:ParentForum].Text" xml:space="preserve">
    <value>Parent Forum</value>
  </data>
  <data name="[RESX:Permissions].Text" xml:space="preserve">
    <value>Permissions</value>
  </data>
  <data name="[RESX:PleaseWait].Text" xml:space="preserve">
    <value>Please Wait...</value>
  </data>
  <data name="[RESX:QuickLinks].Text" xml:space="preserve">
    <value>Quick Links</value>
  </data>
  <data name="[RESX:QuickStats].Text" xml:space="preserve">
    <value>Quick Stats</value>
  </data>
  <data name="[RESX:RecentMembers].Text" xml:space="preserve">
    <value>Recent Members</value>
  </data>
  <data name="[RESX:RecentTopics].Text" xml:space="preserve">
    <value>Recent Topics</value>
  </data>
  <data name="[RESX:SaveComplete].Text" xml:space="preserve">
    <value>Save Completed Successfully</value>
  </data>
  <data name="[RESX:TopForums].Text" xml:space="preserve">
    <value>Top Forums</value>
  </data>
  <data name="[RESX:Topic].Text" xml:space="preserve">
    <value>Topic</value>
  </data>
  <data name="[RESX:TopMembers].Text" xml:space="preserve">
    <value>Top Members</value>
  </data>
  <data name="[RESX:TotalForums].Text" xml:space="preserve">
    <value>Total Forums</value>
  </data>
  <data name="[RESX:TotalMembers].Text" xml:space="preserve">
    <value>Total Members</value>
  </data>
  <data name="[RESX:TotalReplies].Text" xml:space="preserve">
    <value>Total Replies</value>
  </data>
  <data name="[RESX:TotalTopics].Text" xml:space="preserve">
    <value>Total Topics</value>
  </data>
  <data name="[RESX:UrlPrefix].Text" xml:space="preserve">
    <value>Url Prefix</value>
  </data>
  <data name="[RESX:Username].Text" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="[RESX:Filters].Text" xml:space="preserve">
    <value>Filters</value>
  </data>
  <data name="[RESX:Forums].Text" xml:space="preserve">
    <value>Forums</value>
  </data>
  <data name="[RESX:Ranks].Text" xml:space="preserve">
    <value>Ranks</value>
  </data>
  <data name="[RESX:Settings].Text" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="[RESX:Templates].Text" xml:space="preserve">
    <value>Templates</value>
  </data>
  <data name="[RESX:MainFeatures].Text" xml:space="preserve">
    <value>Main Features</value>
  </data>
  <data name="[RESX:No].Text" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="[RESX:Subscriptions].Help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="[RESX:Subscriptions].Text" xml:space="preserve">
    <value>Subscriptions</value>
  </data>
  <data name="[RESX:Yes].Text" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="[RESX:DateFormat].Text" xml:space="preserve">
    <value>Date Format</value>
  </data>
  <data name="[RESX:DefaultPageSize].Text" xml:space="preserve">
    <value>Default Page Size</value>
  </data>
  <data name="[RESX:FloodInterval].Text" xml:space="preserve">
    <value>Flood Interval</value>
  </data>
  <data name="[RESX:MainTemplate].Text" xml:space="preserve">
    <value>Main Template</value>
  </data>
  <data name="[RESX:Theme].Text" xml:space="preserve">
    <value>Theme</value>
  </data>
  <data name="[RESX:TimeFormat].Text" xml:space="preserve">
    <value>Time Format</value>
  </data>
  <data name="[RESX:ApplyOnEdit].Help" xml:space="preserve">
    <value>This will ensure that the filter is only applied when content is created or updated.</value>
  </data>
  <data name="[RESX:ApplyOnEdit].Text" xml:space="preserve">
    <value>Apply on edit</value>
  </data>
  <data name="[RESX:ApplyOnRender].Help" xml:space="preserve">
    <value>This will ensure that the filter is applied prior to displaying content to the user.  Using this method keeps the original content in place.</value>
  </data>
  <data name="[RESX:ApplyOnRender].Text" xml:space="preserve">
    <value>Apply on display</value>
  </data>
  <data name="[RESX:Cancel].Text" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="[RESX:FilterEditor].Text" xml:space="preserve">
    <value>Filter Editor</value>
  </data>
  <data name="[RESX:FilterFind].Help" xml:space="preserve">
    <value>Enter the text or expression that you would like to find.</value>
  </data>
  <data name="[RESX:FilterFind].Text" xml:space="preserve">
    <value>Find</value>
  </data>
  <data name="[RESX:FilterReplace].Help" xml:space="preserve">
    <value>Enter the text or expression that you would like to replace with the matching text.</value>
  </data>
  <data name="[RESX:FilterReplace].Text" xml:space="preserve">
    <value>Replace</value>
  </data>
  <data name="[RESX:FilterType].Help" xml:space="preserve">
    <value>A text filter will perform a find and replace that is an exact match.  A RegEx filter will perform the find and replace using the regular expressions you have specified.  A markup filter is used to specifically for managing markup code.</value>
  </data>
  <data name="[RESX:FilterType].Text" xml:space="preserve">
    <value>Filter Type</value>
  </data>
  <data name="[RESX:Markup].Text" xml:space="preserve">
    <value>Markup</value>
  </data>
  <data name="[RESX:MaxPosts].Help" xml:space="preserve">
    <value>Enter the maximum number of posts a user should have to belong to this rank.</value>
  </data>
  <data name="[RESX:MaxPosts].Text" xml:space="preserve">
    <value>Max Posts</value>
  </data>
  <data name="[RESX:MinPosts].Help" xml:space="preserve">
    <value>Enter the minimum number of posts a user should have to belong to this rank.</value>
  </data>
  <data name="[RESX:MinPosts].Text" xml:space="preserve">
    <value>Min Posts</value>
  </data>
  <data name="[RESX:RankDisplay].Help" xml:space="preserve">
    <value>Enter text or HTML that you would like to have displayed for this rank.</value>
  </data>
  <data name="[RESX:RankDisplay].Text" xml:space="preserve">
    <value>Rank Display</value>
  </data>
  <data name="[RESX:RankEditor].Text" xml:space="preserve">
    <value>Rank Editor</value>
  </data>
  <data name="[RESX:RankName].Help" xml:space="preserve">
    <value>Enter the name you would like to assign for this rank.</value>
  </data>
  <data name="[RESX:RankName].Text" xml:space="preserve">
    <value>Rank Name</value>
  </data>
  <data name="[RESX:RegEx].Text" xml:space="preserve">
    <value>RegEx</value>
  </data>
  <data name="[RESX:Save].Text" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="[RESX:Text].Text" xml:space="preserve">
    <value>Text</value>
  </data>
</root>