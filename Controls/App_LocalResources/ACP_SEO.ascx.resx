<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lblTitle.Text" xml:space="preserve">
    <value>SEO Management</value>
  </data>
  <data name="lblUpdateDone.Text" xml:space="preserve">
    <value>Updated Successfully!</value>
  </data>
  <data name="NumericValidation.ErrorMessage" xml:space="preserve">
    <value>Value must be between 0 and 1.0. </value>
  </data>
  <data name="plNoFollowWeb.Help" xml:space="preserve">
    <value>If checked, indicates that the destination of user website hyperlinks SHOULD NOT be afforded any additional weight or ranking by user agents which perform link analysis upon web pages (e.g. search engines).&lt;br&gt;&lt;b&gt;NOTE&lt;/b&gt;&lt;br&gt;This applies to user profile page website links as well as user website links in posts.</value>
  </data>
  <data name="plNoFollowWeb.Text" xml:space="preserve">
    <value>User's Website No Follow</value>
  </data>
  <data name="plOverrideTitle.Help" xml:space="preserve">
    <value>If checked, the page title set by DotNetNuke will be overriden with the forum name or thread name depending on view (up to 64 chars).</value>
  </data>
  <data name="plOverrideTitle.Text" xml:space="preserve">
    <value>Override Page Title</value>
  </data>
  <data name="plNoFollowLatestThreads.Help" xml:space="preserve">
    <value>If checked, indicates that the destination hyperlinks in the initial group view SHOULD NOT be afforded any additional weight or ranking by user agents which perform link analysis upon web pages (e.g. search engines).&lt;br&gt;&lt;b&gt;NOTE&lt;/b&gt;&lt;br&gt;This applies to the links in initial group view (6,12,24,48, view latest threads) typically seen when first viewing a page with the forum module placed on it.</value>
  </data>
  <data name="plNoFollowLatestThreads.Text" xml:space="preserve">
    <value>Latest Threads No Follow</value>
  </data>
  <data name="plOverrideDescription.Help" xml:space="preserve">
    <value>If checked, the page meta description set by DotNetNuke will be overriden with the initial post content at the thread level (when view posts). If in forum view (ie. lists of threads) the description of the forum will be set here (up to 150 chars). </value>
  </data>
  <data name="plOverrideDescription.Text" xml:space="preserve">
    <value>Override Page Description</value>
  </data>
  <data name="plSitemapPriority.Help" xml:space="preserve">
    <value>This will set the priority level in the sitemap provider (values of 1.0 to .1 work here). </value>
  </data>
  <data name="plSitemapPriority.Text" xml:space="preserve">
    <value>Sitemap Priority</value>
  </data>
  <data name="plOverrideKeyWords.Help" xml:space="preserve">
    <value>If checked, the page keywords set by DotNetNuke will be overriden with the forum name and any applied tags (up to 15 total words).</value>
  </data>
  <data name="plOverrideKeyWords.Text" xml:space="preserve">
    <value>Override Keywords</value>
  </data>
</root>